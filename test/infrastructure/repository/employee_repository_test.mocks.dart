// Mocks generated by Mockito 5.3.2 from annotations
// in cotizacion_dm/test/infrastructure/repository/employee_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:cotizacion_dm/core/domain/domain.dart' as _i4;
import 'package:cotizacion_dm/core/infrastructure/configuration/sqlite/employee/sqlite_employee_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [SQLiteEmployeeRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSQLiteEmployeeRepository extends _i1.Mock
    implements _i2.SQLiteEmployeeRepository {
  MockSQLiteEmployeeRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<int> delete(_i4.Employee? employee) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [employee],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
  @override
  _i3.Future<Set<_i4.Employee>> employees() => (super.noSuchMethod(
        Invocation.method(
          #employees,
          [],
        ),
        returnValue: _i3.Future<Set<_i4.Employee>>.value(<_i4.Employee>{}),
      ) as _i3.Future<Set<_i4.Employee>>);
  @override
  _i3.Future<_i4.Employee?> findById(int? id) => (super.noSuchMethod(
        Invocation.method(
          #findById,
          [id],
        ),
        returnValue: _i3.Future<_i4.Employee?>.value(),
      ) as _i3.Future<_i4.Employee?>);
  @override
  _i3.Future<int> save(_i4.Employee? employee) => (super.noSuchMethod(
        Invocation.method(
          #save,
          [employee],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
  @override
  _i3.Future<int> update(_i4.Employee? employee) => (super.noSuchMethod(
        Invocation.method(
          #update,
          [employee],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
}
